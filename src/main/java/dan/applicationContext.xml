<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
              http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd"
       default-autowire="byName">

    <bean id="propertyPlaceholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="order" value="0"/>
        <property name="locations">
            <list>
                <value>classpath*:chat.properties</value>
                <value>file:${catalina.home}/conf/chat.properties</value>
                <value>file:${catalina.base}/conf/chat.properties</value>
            </list>
        </property>
    </bean>

    <context:spring-configured/>
    <context:component-scan base-package="dan"/>
    <context:annotation-config/>
    <mvc:annotation-driven/>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <ref bean="jsonConverter"/>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="webBindingInitializer">
            <bean class="dan.exception.GlobalBinderInitializer" />
        </property>
        <property name="messageConverters">
            <list>
                <ref bean="jsonConverter"/>
            </list>
        </property>
    </bean>

    <bean id="outboundExceptionAdapter"
          class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">

        <property name="messageConverters">
            <list>
                <ref bean="jsonConverter"/>
            </list>
        </property>
    </bean>

    <bean class="dan.exception.ExceptionHandler">
        <property name="jview">
            <bean class="dan.exception.JsonView" />
        </property>
        <property name="exceptionResponse">
            <bean class="dan.exception.ValueClassTakesException">
                <constructor-arg>
                    <map key-type="java.lang.Class" value-type="java.lang.Class">
                        <entry key="java.lang.Exception"
                               value="dan.client.ErrorResponse" />
                    </map>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="jsonConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <bean class="org.springframework.http.MediaType">
                    <constructor-arg index="0" value="application"/>
                    <constructor-arg index="1" value="json"/>
                    <constructor-arg index="2" value="UTF-8"/>
                </bean>
            </list>
        </property>

        <property name="objectMapper" ref="om">

        </property>
    </bean>

    <bean id="om" class="com.fasterxml.jackson.databind.ObjectMapper">
        <property name="serializationInclusion" value="NON_EMPTY"/>
    </bean>


    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <!--<property name="interceptors" ref="openSessionInViewInterceptor"/>-->
    </bean>

    <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>
    <mvc:resources mapping="/favicon.ico" location="/WEB-INF/static/favicon.ico"/>



    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
          destroy-method="close">
        <!--<property name="driverClass" value="com.mysql.jdbc.Driver"/>-->
        <!--<property name="jdbcUrl" value="jdbc:mysql://${db.host}/${db.name}"/>-->
        <!--<property name="username" value="${db.login}"/>-->
        <!--<property name="password" value="${db.pass}"/>-->

        <property name="driverClass" value="org.hsqldb.jdbcDriver" />
        <property name="jdbcUrl" value="jdbc:hsqldb:mem:test" />
        <property name="username" value="sa" />
        <property name="password" value="root" />

        <property name="maxConnectionsPerPartition" value="1"/>
        <property name="minConnectionsPerPartition" value="1"/>
        <property name="partitionCount" value="1"/>

    </bean>

    <bean id="postProcessor"
          class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="dan.entity"/>
        <property name="jpaProperties">
            <props>
                <prop key="javax.persistence.lock.timeout">4000</prop>
            </props>
        </property>
        <property name="loadTimeWeaver">
            <bean
                    class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="true"/>
                <property name="database" value="HSQL"/>
            </bean>
        </property>
    </bean>

    <bean class="com.googlecode.genericdao.search.jpa.JPASearchProcessor">
        <constructor-arg name="mdu">
            <bean
                    class="com.googlecode.genericdao.search.jpa.JPAAnnotationMetadataUtil">
            </bean>
        </constructor-arg>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>


    <tx:annotation-driven transaction-manager="transactionManager"
                          mode="aspectj" proxy-target-class="true"/>

    <bean id="ttNew" class="org.springframework.transaction.support.TransactionTemplate" >
        <property name="transactionManager" ref="transactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRES_NEW" />
        <!--<property name="isolationLevelName" value="ISOLATION_SERIALIZABLE" />-->
        <!--<property name="timeout" value="11111" />-->
    </bean>

    <bean id="ttReuse" class="org.springframework.transaction.support.TransactionTemplate" >
        <property name="transactionManager" ref="transactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
    </bean>

</beans>